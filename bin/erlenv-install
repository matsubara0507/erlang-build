#!/usr/bin/env bash
set -e
[ -n "$ERLENV_DEBUG" ] && set -x

# Provide erlenv completions
if [ "$1" = "--complete" ]; then
  exec erlang-build --definitions
fi

if [ -z "$ERLENV_ROOT" ]; then
  ERLENV_ROOT="${HOME}/.erlenv"
fi

# Load shared library functions
eval "$(erlang-build --lib)"

usage() {
  { echo "usage: erlenv install [-k|--keep] [-v|--verbose] VERSION"
    echo "       erlenv install [-k|--keep] [-v|--verbose] /path/to/definition"
    echo "       erlenv install -l|--list"
    echo
    echo "  -l/--list        List all available versions"
    echo "  -k/--keep        Keep source tree in \$ERLENV_BUILD_ROOT after installation"
    echo "                   (defaults to ${ERLENV_ROOT}/sources)"
    echo "  -v/--verbose     Verbose mode: print compilation status to stdout"
    echo
  } >&2

  [ -z "$1" ] || exit "$1"
}

unset KEEP
unset VERBOSE

parse_options "$@"
for option in "${OPTIONS[@]}"; do
  case "$option" in
  "h" | "help" )
    usage 0
    ;;
  "l" | "list" )
    echo "Available versions:"
    erlang-build --definitions | sed 's/^/  /'
    exit
    ;;
  "k" | "keep" )
    [ -n "${ERLENV_BUILD_ROOT}" ] || ERLENV_BUILD_ROOT="${ERLENV_ROOT}/sources"
    ;;
  "v" | "verbose" )
    VERBOSE="-v"
    ;;
  "version" )
    exec erlang-build --version
    ;;
  * )
    usage 1
    ;;
  esac
done

DEFINITION="${ARGUMENTS[0]}"
[ -n "$DEFINITION" ] || usage 1

for script in $(erlenv-hooks install); do
  source "$script"
done

VERSION_NAME="${DEFINITION##*/}"
PREFIX="${ERLENV_ROOT}/releases/${VERSION_NAME}"

# If ERLENV_BUILD_ROOT is set, then always pass keep options to erlang-build
if [ -n "${ERLENV_BUILD_ROOT}" ]; then
  export ELIXIR_BUILD_BUILD_PATH="${ERLENV_BUILD_ROOT}/${VERSION_NAME}"
  KEEP="-k"
fi

erlang-build $KEEP $VERBOSE "$DEFINITION" "$PREFIX"
erlenv rehash
